const mongoose = require('mongoose');
require('dotenv').config();

const Aluno = require('../models/Aluno');
const Notificacao = require('../models/Notificacao');

(async () => {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Conectado ao MongoDB.');

    // üîé Busca notifica√ß√µes com nomeAluno mas sem aluno associado
    const notificacoesIgnoradas = await Notificacao.find({
      $or: [
        { aluno: null },
        { aluno: { $exists: false } },
      ],
      nomeAluno: { $exists: true, $ne: "" }
    });

    if (notificacoesIgnoradas.length === 0) {
      console.log('‚úÖ Nenhuma notifica√ß√£o ignorada encontrada.');
      mongoose.disconnect();
      return;
    }

    let nomesNaoEncontrados = [];

    for (const notif of notificacoesIgnoradas) {
      const nome = notif.nomeAluno.trim();
      const aluno = await Aluno.findOne({ nome: new RegExp(`^${nome}$`, 'i') });

      if (!aluno) {
        nomesNaoEncontrados.push(nome);
      }
    }

    // üìã Mostra os nomes √∫nicos
    const unicos = [...new Set(nomesNaoEncontrados)];

    console.log(`‚ö†Ô∏è Total de nomes n√£o encontrados: ${unicos.length}`);
    console.log('üßæ Lista:');
    unicos.forEach((n, i) => console.log(`${i + 1}. ${n}`));

    mongoose.disconnect();
  } catch (err) {
    console.error('‚ùå Erro ao listar notifica√ß√µes ignoradas:', err);
    mongoose.disconnect();
  }
})();
